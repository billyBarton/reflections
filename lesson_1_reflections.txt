How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Juxtaposition of changes facilitates visual capture of differences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Facilitates finding bugs (compare versions)
Increase creativity:  can take chances without losing working versions


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros:  
commits are exactly timed to reflect structural changes
can use best judgement
Cons:  
might forget to back up
might lose changes if system crashes between commits

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

 In git, a functional or feature change may mean code changes across multiple files.
 In Google Docs, each file is meant to be stand alone.

How can you use the commands git log and git diff to view the history of files?

 git log returns all of the commits
 git diff returns the differences between two commits.

How might using version control make you more confident to make changes that
could break something?

git checkout can be used to return the code to a previous stable version

Now that you have your workspace set up, what do you want to try using Git for?

Learn how to use git.